info :
  build:
    artifact : @project.artifactId@
    name : @project.name@
    description : @project.description@
    version : @project.version@

spring:
  profiles:
    active: prod
  application:
    name: @project.description@

endpoints:
  health:
    sensitive : true
logging:
  name: archetype
  level: debug
  path: /tmp/logs/
---
#dev 环境
spring:
  profiles: dev
  datasource:
      url: jdbc:postgresql://192.168.1.2:5432/default
      username: default
      password: topzedu
      driver-class-name: org.postgresql.Driver
  redis:
    host: 192.168.1.2
    port: 6380
    database: 0
    timeout: 3000
    prefix: archetype
    password: topzedu
  boot:
    admin:
      #url: http://192.168.1.5:9088
server:
  tomcat:
    max-threads: 100
    min-spare-threads: 20
  port: 9080
  connection-timeout: 5000



---
#prod 环境
spring:
  profiles: prod
  datasource:
    url: jdbc:postgresql://192.168.1.5:5432/default
    username: default
    password: topzedu
    driver-class-name: org.postgresql.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小，最大
    initialSize: 2
    minIdle: 2
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: SELECT 1 #select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  redis:
    host: 192.168.1.5
    port: 6380
    database: 0
    timeout: 3000
    prefix: archetype
    password: k123
  boot:
    admin:
      #url: http://192.168.1.5:9088
custom:
  datasource:
    names : ds1,ds2
    ds1:
      url: jdbc:postgresql://192.168.1.2:5432/priv
      username: priv
      password: test123
      driver-class-name: org.postgresql.Driver
    ds2:
      url: jdbc:postgresql://192.168.1.5:5432/pub
      username: pub
      password: test123
      driver-class-name: org.postgresql.Driver

server:
  tomcat:
    max-threads: 100
    min-spare-threads: 20
  port: 9081
  connection-timeout: 5000

logging:
  level: info
  path: /data/tomcat/logs/

---
#pub config
server:
  context-path: /@project.artifactId@  #统一为访问的url加上一个前缀
mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  config-location: classpath:mybatis/mybatis-config.xml
  executor-type: simple
  type-aliases-package: com.fivebit.tools.entity

#系统自带默认的tomcat,也可以使用jetty。需要配置jetty依赖。
management:
  security:
    enabled: false

topzedu:
  task-thread-nums: 32

